// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.


const EULER_2_MAX_FIBONACCI = 4000000;

export default class Euler2 {
  prevFibonacci = 0;
  fibonacci = 1;
  resultSumm = 0;

  getResult() {
    do {
      const resultFibonacci = this.fibonacci + this.prevFibonacci;
      this.prevFibonacci = this.fibonacci;
      this.fibonacci = resultFibonacci;

      this.resultSumm = resultFibonacci % 2 === 0
        ? this.resultSumm + resultFibonacci
        : this.resultSumm;

    } while (this.fibonacci < EULER_2_MAX_FIBONACCI);

    return this.resultSumm;
  }
}

// console.time();
// console.log(new Euler2().getResult());
// console.timeEnd();
